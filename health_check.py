#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ Habit Bot
"""

import os
import sys
import asyncio
import json
from datetime import datetime
from telegram import Bot

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = '7742690883:AAFClrtlv4YYlKzFTI5oID6yWkTqke0SBV4'

async def health_check():
    """–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞"""
    try:
        bot = Bot(token=TOKEN)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram API
        me = await bot.get_me()
        print(f"‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω: @{me.username}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª –¥–∞–Ω–Ω—ã—Ö
        script_dir = os.path.dirname(os.path.abspath(__file__))
        habits_file = os.path.join(script_dir, 'habits.json')
        
        if os.path.exists(habits_file):
            with open(habits_file, 'r', encoding='utf-8') as f:
                data = json.load(f)
            print(f"‚úÖ –§–∞–π–ª –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–µ–Ω: {len(data)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        else:
            print("‚ö†Ô∏è  –§–∞–π–ª –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å —á–µ—Ä–µ–∑ pgrep
        import subprocess
        try:
            result = subprocess.run(['pgrep', '-f', 'habit_tracker_bot.py'], 
                                  capture_output=True, text=True)
            if result.returncode == 0:
                pids = result.stdout.strip().split('\n')
                print(f"‚úÖ –ü—Ä–æ—Ü–µ—Å—Å —Ä–∞–±–æ—Ç–∞–µ—Ç: PID {', '.join(pids)}")
                return True
            else:
                print("‚ùå –ü—Ä–æ—Ü–µ—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return False
        except Exception as e:
            print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å: {e}")
            return True  # –°—á–∏—Ç–∞–µ–º —á—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç, –µ—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
        return False

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ Habit Bot - {datetime.now()}")
    
    is_healthy = await health_check()
    
    if is_healthy:
        print("‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ")
        sys.exit(0)
    else:
        print("‚ùå –ë–æ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        sys.exit(1)

if __name__ == "__main__":
    asyncio.run(main()) 