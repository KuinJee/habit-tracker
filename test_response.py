#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–∫–ª–∏–∫–∞ Habit Bot
"""

import asyncio
import time
from datetime import datetime
from telegram import Bot

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = '7742690883:AAFClrtlv4YYlKzFTI5oID6yWkTqke0SBV4'

# –í–∞—à user ID –¥–ª—è —Ç–µ—Å—Ç–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π)
TEST_USER_ID = 1149449580  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π ID

async def test_response_time():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Ä–µ–º—è –æ—Ç–∫–ª–∏–∫–∞ –±–æ—Ç–∞"""
    bot = Bot(token=TOKEN)
    
    print(f"üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–∫–ª–∏–∫–∞ –±–æ—Ç–∞ - {datetime.now()}")
    
    try:
        # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API
        start_time = time.time()
        me = await bot.get_me()
        api_time = time.time() - start_time
        
        print(f"‚úÖ API –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: {api_time:.3f}s (@{me.username})")
        
        # –¢–µ—Å—Ç 2: –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        start_time = time.time()
        message = await bot.send_message(
            chat_id=TEST_USER_ID,
            text="üß™ –¢–µ—Å—Ç –æ—Ç–∫–ª–∏–∫–∞ –±–æ—Ç–∞"
        )
        send_time = time.time() - start_time
        
        print(f"‚úÖ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: {send_time:.3f}s")
        
        # –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
        start_time = time.time()
        updates = await bot.get_updates(limit=1)
        updates_time = time.time() - start_time
        
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {updates_time:.3f}s")
        
        # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        try:
            await bot.delete_message(chat_id=TEST_USER_ID, message_id=message.message_id)
            print("üóëÔ∏è  –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ")
        except:
            pass
        
        # –û–±—â–µ–µ –≤—Ä–µ–º—è
        total_time = api_time + send_time + updates_time
        print(f"\n‚è±Ô∏è  –û–±—â–µ–µ –≤—Ä–µ–º—è: {total_time:.3f}s")
        
        if total_time < 1.0:
            print("üöÄ –û—Ç–ª–∏—á–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –æ—Ç–∫–ª–∏–∫–∞!")
        elif total_time < 2.0:
            print("‚úÖ –•–æ—Ä–æ—à–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –æ—Ç–∫–ª–∏–∫–∞")
        elif total_time < 5.0:
            print("‚ö†Ô∏è  –ú–µ–¥–ª–µ–Ω–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –æ—Ç–∫–ª–∏–∫–∞")
        else:
            print("‚ùå –û—á–µ–Ω—å –º–µ–¥–ª–µ–Ω–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –æ—Ç–∫–ª–∏–∫–∞")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    await test_response_time()

if __name__ == "__main__":
    asyncio.run(main()) 